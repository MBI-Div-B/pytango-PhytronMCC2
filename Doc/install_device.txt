Installieren des Devices mittels "Jive"
#######################################

1. Installieren des "Controller-Devices" 
---------------------------------------

PySerialDS ist ein generisches Device für die Kommunikation über RS232 

"Edit" -> "Create Server"

Server (Servername/Instance) : PySerialDS/hhg
Class: PySerial
Device: hhg/SerialDS/1

"Register Server"


1.2. Konfiguration
---------------------------------------

Beim Start des Devices werden die Properties gelesen.
- welche Schnittstelle soll es benutzen: (Com-Port, /dev/tty, /dev/ttyUSB0 ..  ) und welche Baudrate.

Das sieht im Quelltext so aus:

		self.proxy = PyTango.DeviceProxy(self.get_name())
		db = PyTango.Database()
		prop_names = db.get_device_property(self.get_name(), ['port', 'baudrate'])
		
		if (prop_names.has_key('baudrate') == True) and (len(prop_names["baudrate"]) > 0):
			self.baudrate = prop_names["baudrate"][0]
			self.serial.baudrate = self.baudrate
			
		if (prop_names.has_key('port') == True) and (len(prop_names["port"]) > 0):
			self.port = prop_names["port"][0]
			self.serial.port = self.port
		

Den Eintrag nehmen wir so vor (ebenfalls in "Jive"):

Klicken im Device bis zu den Properties, dann "New property":

- Name: baudrate; Value: 115200
- Name: port; Value: /dev/ttyUSB0

Jeweils "Apply" klicken

1.3. Starten des Devices
---------------------------

# python PySerialDS.py hhg

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

2. Installieren des "Motor-Devices" 
--------------------------------------

Anlegen eines neuen Devices wie oben:

Server (Servername/Instance) : PhytronMcc2/hhg
Class: PhytronMcc2
Device: hhg/MCC2/Ctrl1_0.0

"Register Server"

Ctrl1: Controller 1 (jedes Rack hat eine Nummer)

Die anderen Achsen heissen dann hhg/MCC2/Ctrl1_0.1 ../1.0 ../1.1 ../2.0 usw.


2.2. Konfiguration
---------------------------------------

Die Properties:
Name: Address       Value: 0..15   			# Adresse des Moduls: 0..15
Name: Motor			Value: 0 oder 1 		# Jedes Modul hat 2 Motorachsen, deshalb 0/1
Name: CtrlDevice 	Value: hhg/SerialDS/1	# Name des Controller-Device: "hhg/SerialDS/1"
Name: Alias			Value: string			# Name des Motors


Im Quelltext sieht das so aus:

    # -----------------
    # Device Properties
    # -----------------

    CtrlDevice = device_property(
        dtype='str', default_value=""
    )
    
    Motor = device_property(
        dtype='int16'
    )
    
    Address = device_property(
        dtype='int16'
    )

	
2.3. Starten
---------------

# python PhytronMcc2.py hhg



3. Installieren eines weiteren "Motor-Devices" 
----------------------------------------------

Anlegen eines neuen Devices wie oben:

Server (Servername/Instance) : PhytronMcc2/hhg
Class: PhytronMcc2
Device: hhg/MCC2/0.1

"Register Server"

Die Properties können wir einfach kopieren (rechte Maustaste "copy"/"paste") und dann anpassen.

Jetzt muss das Device neu gestartet werden.



